package model.entity;
// Generated Mar 29, 2019 12:36:16 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="ecommerce"
)
public class Product  implements java.io.Serializable, model.entity.Entity {


     private int id;
     private Category category;
     private String name;
     private double price;
     private Double rating;
     private String image;
     private Double amount;
     private String unit;
     private int quantity;
     private String description;
     private int itemsSold;
     private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);

    public Product() {
    }

	
    public Product(int id, String name, double price, String image, int quantity, int itemsSold) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.image = image;
        this.quantity = quantity;
        this.itemsSold = itemsSold;
    }
    public Product(int id, Category category, String name, double price, Double rating, String image, Double amount, String unit, int quantity, String description, int itemsSold, Set<OrderItem> orderItems) {
       this.id = id;
       this.category = category;
       this.name = name;
       this.price = price;
       this.rating = rating;
       this.image = image;
       this.amount = amount;
       this.unit = unit;
       this.quantity = quantity;
       this.description = description;
       this.itemsSold = itemsSold;
       this.orderItems = orderItems;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="category_id")
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="price", nullable=false, precision=22, scale=0)
    public double getPrice() {
        return this.price;
    }
    
    public void setPrice(double price) {
        this.price = price;
    }

    
    @Column(name="rating", precision=22, scale=0)
    public Double getRating() {
        return this.rating;
    }
    
    public void setRating(Double rating) {
        this.rating = rating;
    }

    
    @Column(name="image", nullable=false, length=1000)
    public String getImage() {
        return this.image;
    }
    
    public void setImage(String image) {
        this.image = image;
    }

    
    @Column(name="amount", precision=22, scale=0)
    public Double getAmount() {
        return this.amount;
    }
    
    public void setAmount(Double amount) {
        this.amount = amount;
    }

    
    @Column(name="unit", length=45)
    public String getUnit() {
        return this.unit;
    }
    
    public void setUnit(String unit) {
        this.unit = unit;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    
    @Column(name="description", length=1000)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="items_sold", nullable=false)
    public int getItemsSold() {
        return this.itemsSold;
    }
    
    public void setItemsSold(int itemsSold) {
        this.itemsSold = itemsSold;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<OrderItem> getOrderItems() {
        return this.orderItems;
    }
    
    public void setOrderItems(Set<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }




}


